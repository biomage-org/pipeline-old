apiVersion:  {{ default "apps/v1" .Values.deploymentApiVersion }}
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-xl"
  namespace: "{{ .Values.namespace }}"
  labels:
    sandboxId: "{{ .Values.sandboxId }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      sandboxId: "{{ .Values.sandboxId }}"
    matchExpressions:
      - {key: activityId, operator: DoesNotExist}
  template:
    metadata:
      name: "{{ .Release.Name }}-server"
      labels:
        type: 'pipeline'
        sandboxId: "{{ .Values.sandboxId }}"
    spec:
      restartPolicy: Always
      serviceAccountName: 'deployment-runner'
      nodeSelector:
        size: xl
      tolerations:
        - key: size
          value: xl
          effect: NoExecute
      containers:
      - name: "{{ .Release.Name }}"
        image: "{{ .Values.pipelineRunner.image }}"
        env:
          - name: CLUSTER_ENV
            value: "{{ .Values.clusterEnv }}"
          - name: SANDBOX_ID
            value: "{{ .Values.sandboxId }}"
          - name: AWS_ACCOUNT_ID
            value: "{{ .Values.myAccount.accountId }}"
        volumeMounts:
        - name: podinfo
          mountPath: /etc/podinfo
        resources:
          requests:
            memory: "{{ .Values.memoryRequest }}"
      volumes:
      - name: podinfo
        downwardAPI:
          items:
            - path: "labels"
              fieldRef:
                fieldPath: metadata.labels